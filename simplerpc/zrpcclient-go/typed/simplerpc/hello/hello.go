// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.4
// Source: hello.proto

package hello

import (
	"context"

	"simplerpc/zrpcclient-go/model/simplerpc/pb/hellopb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SayRequest  = hellopb.SayRequest
	SayResponse = hellopb.SayResponse

	Hello interface {
		Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error)
	}

	defaultHello struct {
		cli zrpc.Client
	}
)

func NewHello(cli zrpc.Client) Hello {
	return &defaultHello{
		cli: cli,
	}
}

func (m *defaultHello) Say(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayResponse, error) {
	client := hellopb.NewHelloClient(m.cli.Conn())
	return client.Say(ctx, in, opts...)
}
