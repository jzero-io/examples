// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: version.proto

package version

import (
	"context"

	"simplerpc/zrpcclient-go/model/pb/versionpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	VersionRequest  = versionpb.VersionRequest
	VersionResponse = versionpb.VersionResponse

	Version interface {
		Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
	}

	defaultVersion struct {
		cli zrpc.Client
	}
)

func NewVersion(cli zrpc.Client) Version {
	return &defaultVersion{
		cli: cli,
	}
}

func (m *defaultVersion) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	client := versionpb.NewVersionClient(m.cli.Conn())
	return client.Version(ctx, in, opts...)
}
