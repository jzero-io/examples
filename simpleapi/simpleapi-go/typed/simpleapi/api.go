// Code generated by jzero. DO NOT EDIT.
// type: api

package simpleapi

import (
	"context"
	"simpleapi/simpleapi-go/model/simpleapi/types"

	"github.com/jzero-io/restc"
)

var (
	_ = context.Background()
)

type ApiGetter interface {
	Api() ApiInterface
}

type ApiInterface interface {
	// API /api/v1/version
	Get(ctx context.Context, param types.GetRequest) (*types.GetResponse, error)

	ApiExpansion
}

type apiClient struct {
	client restc.Interface
}

func newApiClient(c *SimpleapiClient) *apiClient {
	return &apiClient{
		client: c.RESTClient(),
	}
}

func (x *apiClient) Get(ctx context.Context, param types.GetRequest) (*types.GetResponse, error) {
	var resp *types.GetResponse
	err := x.client.Verb("GET").
		SubPath(
			"/api/v1/version",
		).
		Params().
		Do(ctx).
		Into(&resp, true)

	if err != nil {
		return nil, err
	}

	return resp, nil
}
