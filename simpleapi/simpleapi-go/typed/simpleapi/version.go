
// Code generated by jzero. DO NOT EDIT.
// type: version

package simpleapi

import (
    "context"

    "simpleapi/simpleapi-go/model/simpleapi/version"
    
    "github.com/jzero-io/restc"
)

var (
    _ = context.Background()
)

type VersionGetter interface {
	Version() VersionInterface
}

type VersionInterface interface {
	// API /api/v1/version 
	Get(ctx context.Context,param version.GetRequest) (*version.GetResponse, error)
	
	VersionExpansion
}

type versionClient struct {
	client restc.Interface
}

func newVersionClient(c *SimpleapiClient) *versionClient {
	return &versionClient{
		client: c.RESTClient(),
	}
}

func (x *versionClient) Get(ctx context.Context,param version.GetRequest) (*version.GetResponse, error) {
	var resp *version.GetResponse
		err := x.client.Verb("GET").
		SubPath(
			"/api/v1/version",
		).
		Params(
		).
		
		Do(ctx).
		Into(&resp, true)

	if err != nil {
		return nil, err
	}

	return resp, nil
}

