// Code generated by jzero. DO NOT EDIT.
// type: version

package simpleapi

import (
	"context"
	"simpleapi/simpleapi-go/model/simpleapi/version"

	"github.com/jzero-io/restc"
)

var (
	_ = context.Background()
)

type VersionGetter interface {
	Version() VersionInterface
}

type VersionInterface interface {
	// API /api/v1/version
	Version(ctx context.Context, param version.VersionRequest) (*version.VersionResponse, error)

	VersionExpansion
}

type versionClient struct {
	client restc.Interface
}

func newVersionClient(c *SimpleapiClient) *versionClient {
	return &versionClient{
		client: c.RESTClient(),
	}
}

func (x *versionClient) Version(ctx context.Context, param version.VersionRequest) (*version.VersionResponse, error) {
	var resp *version.VersionResponse
	err := x.client.Verb("GET").
		SubPath(
			"/api/v1/version",
		).
		Params().
		Do(ctx).
		Into(&resp, true)

	if err != nil {
		return nil, err
	}

	return resp, nil
}
