// Code generated by jzero. DO NOT EDIT.
// type: Version

package version

import (
	"context"

	"github.com/jzero-io/restc"

	"simplegateway/simplegateway-go/model/pb/versionpb"
)

var (
	_ = context.Background()
)

type Version interface {
	// GET:/api/v1/version
	Version(ctx context.Context, param *versionpb.VersionRequest) (*versionpb.VersionResponse, error)
}

type versionClient struct {
	client restc.Client
}

func NewVersion(c restc.Client) Version {
	return &versionClient{
		client: c,
	}
}

func (x *versionClient) Version(ctx context.Context, param *versionpb.VersionRequest) (*versionpb.VersionResponse, error) {
	var resp *versionpb.VersionResponse
	err := x.client.Verb("GET").
		Path(
			"/api/v1/version",
		).
		Params().
		Do(ctx).
		Into(&resp, &restc.IntoOptions{
			WrapCodeMsg: false,
		})

	if err != nil {
		return nil, err
	}

	return resp, nil
}
