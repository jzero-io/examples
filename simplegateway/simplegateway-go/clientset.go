// Code generated by jzero. DO NOT EDIT.
// type: clientset

package simplegateway

import (
	"simplegateway-go/rest"
	"simplegateway-go/typed"

	"simplegateway-go/typed/simplegateway"
)

type Interface interface {
	Direct() typed.DirectInterface

	Simplegateway() simplegateway.SimplegatewayInterface
}

type Clientset struct {
	// direct client to request
	direct *typed.DirectClient

	simplegateway *simplegateway.SimplegatewayClient
}

func (x *Clientset) Direct() typed.DirectInterface {
	return x.direct
}

func (x *Clientset) Simplegateway() simplegateway.SimplegatewayInterface {
	return x.simplegateway
}

func NewClientWithOptions(ops ...rest.Opt) (simplegateway.SimplegatewayInterface, error) {
	c := &rest.RESTClient{}
	for _, op := range ops {
		if err := op(c); err != nil {
			return nil, err
		}
	}
	configShallowCopy := *c
	var cs Clientset
	var err error
	cs.direct, err = typed.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.simplegateway, err = simplegateway.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	
	return cs.Simplegateway(), nil
}