syntax = "proto3";

package userpb;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "grpc-gateway/protoc-gen-openapiv2/options/annotations.proto";
import "jzero/api/http.proto";
import "jzero/api/zrpc.proto";

option go_package = "./pb/userpb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        version: "v1";
    };
};

message CreateUserRequest {
    string username = 1 [(validate.rules).string = {
        min_len: 6,
    }];
    string password = 2 [(validate.rules).string = {
        min_len: 6,
    }];
}

message ListUserRequest {
    // 分页参数
    int32 page = 1 [(validate.rules).int32 = {
        gte: 1,
    }];
    int32 size = 2 [(validate.rules).int32 = {
        gte: 1,
        lte: 100
    }];

    // 过滤
    string username = 3;
}

message UserItem {
    string username = 1;
    string create_time = 2;
}

message ListUserResponse {
    int32 total = 1;
    repeated UserItem list = 2;
}

message CreateUserResponse {
    int32 id = 1;
}

service User {
    option (jzero.api.http_group) = {
        middleware: "Auth",
    };
    option (jzero.api.zrpc_group) = {
        middleware: "Auth",
    };

    rpc CreateUser(CreateUserRequest) returns(CreateUserResponse) {
        option (google.api.http) = {
            post: "/api/v1/user/create",
            body: "*"
        };
        option (jzero.api.http) = {
            middleware: "Auth",
        };
        option (jzero.api.zrpc) = {
            middleware: "Auth",
        };
    };

    rpc ListUser(ListUserRequest) returns(ListUserResponse) {
        option (google.api.http) = {
            get: "/api/v1/user/list",
        };
    };
}